#!/bin/sh
#### Based upon raspi-config
## Part of raspi-config http://github.com/asb/raspi-config
##
## See LICENSE file for copyright and license details

## (c)2014    Matthias Strubel  matthias.strubel@aod-rpg.de
#    GPL

DEBUG=1
INTERACTIVE=True
ASK_TO_REBOOT=0

. $(dirname $0)/lbx_functions.sh

calc_wt_size() {
  # NOTE: it's tempting to redirect stderr to /dev/null, so supress error 
  # output from tput. However in this case, tput detects neither stdout or 
  # stderr is a tty and so only gives default 80, 24 values
  WT_HEIGHT=17
  WT_WIDTH=$(tput cols)

  if [ -z "$WT_WIDTH" ] || [ "$WT_WIDTH" -lt 60 ]; then
    WT_WIDTH=80
  fi
  if [ "$WT_WIDTH" -gt 178 ]; then
    WT_WIDTH=120
  fi
  WT_MENU_HEIGHT=$(($WT_HEIGHT-8))
}


do_finish(){
  if [ $ASK_TO_REBOOT -eq 1 ]; then
    whiptail --yesno "Would you like to reboot now?" 20 60 2
    if [ $? -eq 0 ]; then # yes
      sync
      reboot
    fi
  fi
  exit
}


# Everything else needs to be run as root
if [ $(id -u) -ne 0 ] && [ ! $DEBUG ] ; then
  printf "Script must be run as root. Try 'sudo raspi-config'\n"
  exit 1
fi

run_about(){
	echo "TODO"
	exit
}

run_enable_wifi_hotspot(){
	do_enable_wifi_hotspot
	ASK_TO_REBOOT=1
	whiptail --msgbox "LibraryBox Configuration changed, Enabled Wifi" 20 60 1
	return 0
}

run_disable_wifi_hotspot(){
	do_disable_wifi_hotspot
        ASK_TO_REBOOT=1
	whiptail --msgbox "LibraryBox Configuration changed, Disabled Wifi" 20 60 1
	return 0
}

run_change_pass_root() {
	whiptail --msgbox "You will now be asked to enter a new password for the root user" 20 60 1
	passwd  &&
	whiptail --msgbox "Password changed successfully" 20 60 1
}

run_timesave(){
	do_timesave_enable
	whiptail --msgbox "Timesave function setup and initialized, Remeber setup date&time" 20 60 1
}

run_dateTime(){
	in_time=$(whiptail --inputbox "Setup time, use format HHmm"  20 60 'HHmm' 3>&1 1>&2 2>&3 )
	in_date=$(whiptail --inputbox "Setup date, use format YYYYMMdd"  20 60 'YYYYMMdd' 3>&1 1>&2 2>&3 )
	echo "${in_date}${in_time}" 
	[[ $DEBUG ]] || date  "${in_date}${in_time}"  
}

run_lbx_ftp_config(){
	/opt/piratebox/bin/ftp_enable.sh
}

#
# Interactive use loop
#
calc_wt_size
while true; do
	FUN=$(whiptail --title "LibraryBox Configuration Tool - ArchLinux" --menu "Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Finish --ok-button Select \
	"1  Enable   USB Wifi" "Enables USB wifi including a Wait-Time; Reboot required" \
	"2  Disable  USB Wifi" "Disabled enabled wifi setup; Reboot required" \
	"3  Date&Time" "Setup Date and Time" \
	"4  Timesave"  "Setup Fake RTC and init. cron" \
	"5  FTP-Config" "Launch FTP LibraryBox Setup" \
	"8  Change root password" "Changes default password for root user" \
	"9  About librarybox-config" "Information about this tool" \
	 3>&1 1>&2 2>&3 )
	RET=$?
	if [ $RET -eq 1 ]; then
	 	do_finish
    	elif [ $RET -eq 0 ]; then
		case "$FUN" in
			1\ *) run_enable_wifi_hotspot ;;
			2\ *) run_disable_wifi_hotspot ;;
			3\ *) run_dateTime ;;
			4\ *) run_timesave ;;
			5\ *) run_lbx_ftp_config ;;
			8\ *) run_change_pass_root ;;
			9\ *) run_about ;;
		esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
	else
		exit 1
	fi
	echo $RET - $FUN
done
